{"processing_server":"typhoon","pipelines":[{"spec":{"name":"main","description":"","inputs":[{"name":"timeseries"}],"outputs":[{"name":"timeseries_out"}],"parameters":[{"name":"t1"},{"name":"t2"},{"name":"channels","optional":true}]},"steps":[{"step_type":"processor","processor_name":"pyms.extract_timeseries","inputs":{"timeseries":"raw"},"outputs":{"timeseries_out":"timeseries_out"},"parameters":{"channels":"1,2,3,14,15,16","t1":"-1","t2":"-1"}},{"step_type":"processor","processor_name":"pyms.extract_timeseries","inputs":{"timeseries":"timeseries_out"},"outputs":{"timeseries_out":"raw1"},"parameters":{"channels":"","t1":"0","t2":"2592000000"}},{"step_type":"pipeline","pipeline_name":"sort_on_segments","inputs":{"raw":"raw1"},"outputs":{"firings_out":"firings1","firings_original_out":"","dmatrix_out":"","dmatrix_templates_out":""},"parameters":{"samplerate":"30000","detect_sign":"-1","curate":"true","start_time_minutes":"0","segment_duration_minutes":"480","total_duration_minutes":"1440","detect_threshold":"3"}},{"step_type":"pipeline","pipeline_name":"curate"}],"input_files":[],"output_files":[]},{"name":"sort","script":"/* Define the spec */\ninputs_opt('raw','filt','pre','geom');\noutputs('firings_out');\noutputs_opt('filt_out','pre_out','firings_original_out');\nparam('samplerate',30000);\nparam('freq_min',300);\nparam('freq_max',6000);\nparam('freq_wid',1000);\nparam('whiten','true');\nparam('detect_threshold',3);\nparam('detect_sign',0);\nparam('adjacency_radius',-1);\n\nparam('curate','false');\n      \n\n_Pipeline.run=function(X) {\n  var pp=X.parameters;\n  \n  var pre='pre';\n  if (!X.hasInput('pre')) {\n    \n    var filt='filt';\n    if (!X.hasInput('filt')) {\n      if (!X.hasInput('raw')) {\n        console.error('Missing input: raw, filt or pre');\n        return -1;\n      }\n      X.runProcess('ms3.bandpass_filter',\n                   {timeseries:'raw'},\n                   {timeseries_out:'filt_out'},\n                   {samplerate:pp.samplerate,freq_min:pp.freq_min,freq_max:pp.freq_max,freq_wid:pp.freq_wid}\n                  );\n      filt='filt_out';\n    }\n  \n  \n    if (pp.whiten=='true') {\n      X.runProcess('ms3.whiten',\n                   {timeseries:filt},\n                   {timeseries_out:'pre_out'},\n                   {}\n                  );\n    }\n    else {\n      X.runProcess('pyms.normalize_channels',\n                   {timeseries:'filt'},\n                   {timeseries_out:'pre_out'},\n                   {}\n                  );\n    }\n    pre='pre_out';\n  }\n  \n  \n  var curate=(pp.curate=='true');\n  var firings1='firings_out';\n  if (curate) firings1='firings_original_out';\n  \n  var p={\n    detect_threshold:pp.detect_threshold,\n    detect_sign:pp.detect_sign,\n    adjacency_radius:pp.adjacency_radius\n  };\n  var inputs={timeseries:pre};\n  if (X.hasInput('geom')) {\n    inputs.geom='geom';\n  }\n  X.runProcess('mountainsortalg.ms3',\n               inputs,\n               {firings_out:firings1},\n               p);\n  \n  if (curate) {\n    X.runPipeline('curate',\n               {pre:pre,firings:firings1},\n               {curated_firings:'firings_out'},\n               {samplerate:pp.samplerate});\n  }\n               \n};\n\n/////////////////////////////////////////////////////////////////////\n\n\nfunction param(str,val) {\n      if (val===undefined) {\n        _Pipeline.spec.parameters.push({name:str});\n      }\n      else {\n        _Pipeline.spec.parameters.push({name:str,optional:true,default_value:val});\n      }\n}\n                \nfunction inputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1});\n  if (str2) _Pipeline.spec.inputs.push({name:str2});\n  if (str3) _Pipeline.spec.inputs.push({name:str3});\n  if (str4) _Pipeline.spec.inputs.push({name:str4});\n}\n\nfunction inputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.inputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.inputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.inputs.push({name:str4,optional:true});\n}\n\nfunction outputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1});\n  if (str2) _Pipeline.spec.outputs.push({name:str2});\n  if (str3) _Pipeline.spec.outputs.push({name:str3});\n  if (str4) _Pipeline.spec.outputs.push({name:str4});\n}\n\nfunction outputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.outputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.outputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.outputs.push({name:str4,optional:true});\n}","export":false,"steps":[],"spec":{"name":"","description":"","inputs":[],"outputs":[],"parameters":[]}},{"spec":{"name":"curate","description":"","inputs":[{"name":"pre"},{"name":"firings"}],"outputs":[{"name":"curated_firings"}],"parameters":[{"name":"samplerate"}]},"steps":[{"step_type":"processor","processor_name":"ms3.cluster_metrics","inputs":{"timeseries":"pre","firings":"firings"},"outputs":{"cluster_metrics_out":"metrics1"},"parameters":{"samplerate":"${samplerate}"}},{"step_type":"processor","processor_name":"ms3.isolation_metrics","inputs":{"timeseries":"pre","firings":"firings"},"outputs":{"metrics_out":"metrics2"},"parameters":{"compute_bursting_parents":"true"}},{"step_type":"processor","processor_name":"ms3.combine_cluster_metrics","inputs":{"metrics_list":["metrics1","metrics2"]},"outputs":{"metrics_out":"metrics"},"parameters":{}},{"step_type":"processor","processor_name":"pyms.create_label_map","inputs":{"metrics":"metrics"},"outputs":{"label_map_out":"label_map"},"parameters":{"isolation_thresh":""}},{"step_type":"processor","processor_name":"pyms.apply_label_map","inputs":{"firings":"firings","label_map":"label_map"},"outputs":{"firings_out":"curated_firings"},"parameters":{}}],"input_files":[],"output_files":[]},{"name":"sort_on_segments","script":"/* Define the spec */\ninputs_opt('raw','filt','pre','geom');\noutputs('firings_out');\noutputs_opt('filt_out','pre_out','firings_original_out','dmatrix_out');\noutputs_opt('dmatrix_templates_out');\nparam('samplerate',30000);\nparam('freq_min',300);\nparam('freq_max',6000);\nparam('freq_wid',1000);\nparam('whiten','true');\nparam('detect_threshold',3);\nparam('detect_sign',0);\nparam('adjacency_radius',-1);\n\nparam('curate','false');\nparam('start_time_minutes',0);\nparam('segment_duration_minutes',10);\nparam('total_duration_minutes',60);\n\n_Pipeline.run=function(X) {\n  var pp=X.parameters;\n\n  var pre='pre';\n  if (!X.hasInput('pre')) {\n\n    var filt='filt';\n    if (!X.hasInput('filt')) {\n      if (!X.hasInput('raw')) {\n        console.error('Missing input: raw, filt or pre');\n        return -1;\n      }\n      X.runProcess('ms3.bandpass_filter',\n                   {timeseries:'raw'},\n                   {timeseries_out:'filt_out'},\n                   {samplerate:pp.samplerate,freq_min:pp.freq_min,freq_max:pp.freq_max,freq_wid:pp.freq_wid}\n                  );\n      filt='filt_out';\n    }\n\n    if (pp.whiten=='true') {\n      X.runProcess('ms3.whiten',\n                   {timeseries:filt},\n                   {timeseries_out:'pre_out'},\n                   {}\n                  );\n    }\n    else {\n      X.runProcess('pyms.normalize_channels',\n                   {timeseries:'filt'},\n                   {timeseries_out:'pre_out'},\n                   {}\n                  );\n    }\n    pre='pre_out';\n  }\n\n  var segment_duration=Number(pp.segment_duration_minutes)*Number(pp.samplerate)*60;\n  var start_time=Number(pp.start_time_minutes)*Number(pp.samplerate)*60;\n  var total_duration=Number(pp.total_duration_minutes)*Number(pp.samplerate)*60;\n\n  var num_segments=Math.ceil(total_duration/segment_duration);\n  console.log ('Using '+num_segments+' segments...');\n\n  var p={\n    detect_threshold:pp.detect_threshold,\n    detect_sign:pp.detect_sign,\n    adjacency_radius:pp.adjacency_radius,\n    curate:pp.curate\n  };\n  var inputs={timeseries:pre};\n  if (X.hasInput('geom')) {\n    inputs.geom='geom';\n  }\n\n  var firings_list=[];\n  var timeseries_list=[];\n  var time_offsets=[];\n  for (var iseg=0; iseg<num_segments; iseg++) {\n    var t1=Math.floor(start_time+iseg*segment_duration);\n    var t2=Math.floor(start_time+(iseg+1)*segment_duration)-1;\n    if (t2>=start_time+total_duration) t2=Math.floor(start_time+total_duration-1);\n\tconsole.log (start_time);\n    console.log (iseg);\n    console.log (segment_duration);\n    console.log ('Segment '+(iseg+1)+': t1='+t1+', t2='+t2+', t1_min='+(t1*Number(pp.samplerate)*60)+', t2_min='+(t1*Number(pp.samplerate)*60));\n\n    X.runProcess('pyms.extract_timeseries',\n                 {timeseries:'pre_out'},\n                 {timeseries_out:'pre-'+(iseg+1)},\n                 {t1:t1,t2:t2});\n    X.runPipeline('sort',\n              {pre:'pre-'+(iseg+1)},\n              {firings_out:'firings-'+(iseg+1)},\n              p);\n\n    firings_list.push('firings-'+(iseg+1));\n    timeseries_list.push('pre-'+(iseg+1));\n    time_offsets.push(t1);\n  }\n\n  X.runProcess('pyms.anneal_segments',\n               {timeseries_list:timeseries_list,\n                firings_list:firings_list},\n               {firings_out:'firings_out',dmatrix_out:'dmatrix_out',dmatrix_templates_out:'dmatrix_templates_out'},\n               {time_offsets:time_offsets});\n  \n};\n\n/////////////////////////////////////////////////////////////////////\n\n\nfunction param(str,val) {\n      if (val===undefined) {\n        _Pipeline.spec.parameters.push({name:str});\n      }\n      else {\n        console.log('opt');\n        _Pipeline.spec.parameters.push({name:str,optional:true,default_value:val});\n      }\n}\n\nfunction inputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1});\n  if (str2) _Pipeline.spec.inputs.push({name:str2});\n  if (str3) _Pipeline.spec.inputs.push({name:str3});\n  if (str4) _Pipeline.spec.inputs.push({name:str4});\n}\n\nfunction inputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.inputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.inputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.inputs.push({name:str4,optional:true});\n}\n\nfunction outputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1});\n  if (str2) _Pipeline.spec.outputs.push({name:str2});\n  if (str3) _Pipeline.spec.outputs.push({name:str3});\n  if (str4) _Pipeline.spec.outputs.push({name:str4});\n}\n\nfunction outputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.outputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.outputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.outputs.push({name:str4,optional:true});\n}","export":true,"steps":[],"spec":{"name":"","description":"","inputs":[],"outputs":[],"parameters":[]}},{"spec":{"name":"extract_for_view","description":"","inputs":[],"outputs":[],"parameters":[]},"steps":[{"step_type":"processor","processor_name":"pyms.extract_subfirings","inputs":{"firings":"firings","channels":"channels","timeseries":"timeseries"},"outputs":{"firings_out":"subfirings"},"parameters":{}},{"step_type":"processor","processor_name":"pyms.extract_timeseries","inputs":{"timeseries":"timeseries"},"outputs":{"timeseries_out":"timeseries_subset"},"parameters":{"channels":"channels"}}],"input_files":[],"output_files":[],"export":true},{"spec":{"name":"metrics","description":"","inputs":[{"name":"raw"},{"name":"firings"}],"outputs":[{"name":"metrics_out"}],"parameters":[{"name":"samplerate"}]},"steps":[{"step_type":"processor","processor_name":"ms3.bandpass_filter","inputs":{"timeseries":"raw"},"outputs":{"timeseries_out":"filt"},"parameters":{"samplerate":"${samplerate}","freq_min":"300","freq_max":"6000","freq_wid":"1000"}},{"step_type":"processor","processor_name":"ms3.whiten","inputs":{"timeseries":"filt"},"outputs":{"timeseries_out":"pre"},"parameters":{}},{"step_type":"processor","processor_name":"ms3.cluster_metrics","inputs":{"timeseries":"pre","firings":"firings"},"outputs":{"cluster_metrics_out":"metrics1"},"parameters":{"samplerate":"${samplerate}"}},{"step_type":"processor","processor_name":"ms3.isolation_metrics","inputs":{"timeseries":"pre","firings":"firings"},"outputs":{"metrics_out":"metrics2","pair_metrics_out":""},"parameters":{"compute_bursting_parents":"true"}},{"step_type":"processor","processor_name":"ms3.combine_cluster_metrics","inputs":{"metrics_list":["metrics1","metrics2"]},"outputs":{"metrics_out":"metrics_out"},"parameters":{}}],"input_files":[],"output_files":[],"export":true}],"input_files":[{"prv":{"original_checksum":"fd2d157fa98cd286b0794620848fd9e3ac3f3711","original_size":98,"original_fcs":"head1000-fd2d157fa98cd286b0794620848fd9e3ac3f3711","original_path":"geom.csv"},"name":"geom","on_server":true,"on_s3":false,"s3_address":""},{"prv":{"original_checksum":"4ae56b767adca6ff9d60b59204bba7f21bbbbd45","original_fcs":"head1000-214d3f88c7fe44b1b2e73e4bce099e7c12ccb109","original_size":96000000028,"original_path":"s3://mountainlab/misc/datasets/jason/drift_test/20161206_KF2_9-12_nt28/raw.mda","prv_version":"0.11"},"name":"raw","on_s3":true,"s3_address":"s3://mountainlab//misc/datasets/jason/drift_test/20161206_KF2_9-12_nt28/raw.mda","on_server":true}],"output_files":[],"jobs":[]}